@{
    ViewData["Title"] = ViewData["AreaName"];
    List<JamesAPokemonWAD.Models.AreasPokemon> pokemon = Model;
}
<div class="container container--areadetails">
    <h1 class="txt-title">@ViewData["AreaName"]</h1>
    <img class="areaImg" src="@ViewData["AreaImage"]" alt="An image depicting @ViewData["AreaName"]" />

    <div class="areaSearchWrapper">
            <a class="btn btn--update" asp-controller="PokePC" asp-action="Area" asp-route-id=@Model[0].AreaId>Search for Pokémon!</a>
    </div>

    <p>Pokémon to be found in @ViewData["AreaName"]... <br /></p>
    <p>@(Model[0].Area.ExpPerCatch)xp per catch!</p>



    <div class="split split--areararities">
        @if (pokemon.Any(pokemon => pokemon.Pokemon.Rarity.Contains("Common")))
        {
            <div class="wrapper-areapoke wrapper-areapoke--common">
                <p class="txt-rarity"> Common</p>
                <div class="split split--mypoke">
                    @foreach (var pokemonInArea in pokemon.Where(p => p.Pokemon.Rarity == "Common"))
                    {
                        <div>
                            <img class="pokemonImg  pokemonImg--@pokemonInArea.Pokemon.Type_1 pokemonImg--offset--@(pokemonInArea.Pokemon.Type_2 == null || pokemonInArea.Pokemon.Type_2 == "" ? pokemonInArea.Pokemon.Type_1 : pokemonInArea.Pokemon.Type_2)" src="@(pokemonInArea.Pokemon.Image.Contains("upload") ? "/images/pokemon/" : "")@pokemonInArea.Pokemon.Image" alt="A picture of the Pokémon @pokemonInArea.Pokemon.PokemonName">
                            <p class="txt-pokename">@pokemonInArea.Pokemon.PokemonName</p>
                        </div>
                    }
                </div>
            </div>

        }

        @if (pokemon.Any(pokemon => pokemon.Pokemon.Rarity.Contains("Uncommon")))
        {
            <div class="wrapper-areapoke wrapper-areapoke--uncommon">
                <p class="txt-rarity"> Uncommon</p>
                <div class="split split--mypoke">
                    @foreach (var pokemonInArea in pokemon.Where(p => p.Pokemon.Rarity == "Uncommon"))
                    {
                        <div>
                            <img class="pokemonImg  pokemonImg--@pokemonInArea.Pokemon.Type_1 pokemonImg--offset--@(pokemonInArea.Pokemon.Type_2 == null || pokemonInArea.Pokemon.Type_2 == "" ? pokemonInArea.Pokemon.Type_1 : pokemonInArea.Pokemon.Type_2)" src="@(pokemonInArea.Pokemon.Image.Contains("upload") ? "/images/pokemon/" : "")@pokemonInArea.Pokemon.Image" alt="A picture of the Pokémon @pokemonInArea.Pokemon.PokemonName">
                            <p class="txt-pokename">@pokemonInArea.Pokemon.PokemonName</p>
                        </div>
                    }
                </div>
            </div>

        }

        @if (pokemon.Any(pokemon => pokemon.Pokemon.Rarity.Contains("Rare")))
        {
            <div class="wrapper-areapoke wrapper-areapoke--rare">
                <p class="txt-rarity"> Rare</p>
                <div class="split split--mypoke">
                    @foreach (var pokemonInArea in pokemon.Where(p => p.Pokemon.Rarity == "Rare"))
                    {
                        <div>
                            <img class="pokemonImg pokemonImg--@pokemonInArea.Pokemon.Type_1 pokemonImg--offset--@(pokemonInArea.Pokemon.Type_2 == null || pokemonInArea.Pokemon.Type_2 == "" ? pokemonInArea.Pokemon.Type_1 : pokemonInArea.Pokemon.Type_2)" src="@(pokemonInArea.Pokemon.Image.Contains("upload") ? "/images/pokemon/" : "")@pokemonInArea.Pokemon.Image" alt="A picture of the Pokémon @pokemonInArea.Pokemon.PokemonName">
                            <p class="txt-pokename">@pokemonInArea.Pokemon.PokemonName</p>
                        </div>
                    }
                </div>
            </div>

        }
        @if (pokemon.Any(pokemon => pokemon.Pokemon.Rarity.Contains("Legendary")))
        {
            <div class="wrapper-areapoke wrapper-areapoke--legendary">
                <p class="txt-rarity"> Legendary</p>
                <div class="split split--mypoke">
                    @foreach (var pokemonInArea in pokemon.Where(p => p.Pokemon.Rarity == "Legendary"))
                    {
                        <div>
                            <img class="pokemonImg pokemonImg--legend pokemonImg--@pokemonInArea.Pokemon.Type_1 pokemonImg--offset--@(pokemonInArea.Pokemon.Type_2 == null || pokemonInArea.Pokemon.Type_2 == "" ? pokemonInArea.Pokemon.Type_1 : pokemonInArea.Pokemon.Type_2)" src="@(pokemonInArea.Pokemon.Image.Contains("upload") ? "/images/pokemon/" : "")@pokemonInArea.Pokemon.Image" alt="A picture of the Pokémon @pokemonInArea.Pokemon.PokemonName">
                            <p class="txt-pokename">???</p>
                        </div>
                    }
                </div>
            </div>
        }
    </div>


</div>
<div class="split">
    <a href="javascript:void(0)" id="historyBackBtn"
       class="btn">
        Back
    </a>
</div>