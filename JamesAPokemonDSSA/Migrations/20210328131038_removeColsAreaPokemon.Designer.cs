// <auto-generated />
using System;
using JamesAPokemonWAD.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JamesAPokemonWAD.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210328131038_removeColsAreaPokemon")]
    partial class removeColsAreaPokemon
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JamesAPokemonWAD.Models.Area", b =>
                {
                    b.Property<int>("AreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExpPerCatch")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("LevelRequirement")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)");

                    b.HasKey("AreaId");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("JamesAPokemonWAD.Models.AreasPokemon", b =>
                {
                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.Property<string>("Rarity")
                        .HasColumnType("varchar(50)");

                    b.HasKey("AreaId", "PokemonId");

                    b.HasIndex("PokemonId");

                    b.ToTable("AreaPokemon");
                });

            modelBuilder.Entity("JamesAPokemonWAD.Models.CaughtPokemon", b =>
                {
                    b.Property<int>("PokemonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CatchDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsShiny")
                        .HasColumnType("bit");

                    b.Property<string>("Nickname")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("PokemonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PokemonID");

                    b.ToTable("CaughtPokemon");
                });

            modelBuilder.Entity("JamesAPokemonWAD.Models.Pokemon", b =>
                {
                    b.Property<int>("PokemonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Generation")
                        .HasColumnType("decimal(10)");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("PokedexNum")
                        .HasColumnType("int");

                    b.Property<string>("PokemonName")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ShinyImage")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Type_1")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Type_2")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("PokemonId");

                    b.ToTable("Pokemon");
                });

            modelBuilder.Entity("JamesAPokemonWAD.Models.AreasPokemon", b =>
                {
                    b.HasOne("JamesAPokemonWAD.Models.Area", "Area")
                        .WithMany("AreasPokemon")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JamesAPokemonWAD.Models.Pokemon", "Pokemon")
                        .WithMany("AreasPokemon")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
