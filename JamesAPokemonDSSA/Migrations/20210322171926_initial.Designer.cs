// <auto-generated />
using System;
using JamesAPokemonWAD.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JamesAPokemonWAD.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210322171926_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JamesAPokemonWAD.Models.CaughtPokemon", b =>
                {
                    b.Property<int>("PokemonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CatchDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsShiny")
                        .HasColumnType("bit");

                    b.Property<string>("Nickname")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("PokemonName")
                        .HasColumnType("varchar(30)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("PokemonID");

                    b.HasIndex("PokemonName");

                    b.ToTable("CaughtPokemon");
                });

            modelBuilder.Entity("JamesAPokemonWAD.Models.Pokemon", b =>
                {
                    b.Property<string>("PokemonName")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Generation")
                        .HasColumnType("decimal(10)");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ShinyImage")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Type_1")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Type_2")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("PokemonName");

                    b.ToTable("Pokemon");
                });

            modelBuilder.Entity("JamesAPokemonWAD.Models.CaughtPokemon", b =>
                {
                    b.HasOne("JamesAPokemonWAD.Models.Pokemon", "Pokemon")
                        .WithMany()
                        .HasForeignKey("PokemonName");
                });
#pragma warning restore 612, 618
        }
    }
}
